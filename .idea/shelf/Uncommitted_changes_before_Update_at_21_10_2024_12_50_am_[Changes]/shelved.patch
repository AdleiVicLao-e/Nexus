Index: res/js/admin/admin.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// admin.js\r\n\r\n// -----------------------\r\n// Adding Artifact Tab\r\n// -----------------------\r\ndocument.getElementById('addArtifactForm').addEventListener('submit', function(e) {\r\n    e.preventDefault();\r\n\r\n    var formData = new FormData(this);\r\n\r\n    fetch('../include/addArtifact.php', {\r\n        method: 'POST',\r\n        body: formData\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            try {\r\n                document.getElementById('overlay-message').innerText = data.message;\r\n\r\n                if (data.success) {\r\n                    // Generate the QR code after successfully adding the artifact\r\n                    generateQRCode(data.artifact_id, formData.get('artifact-name'));\r\n\r\n                    // Collect script content to update\r\n                    const scriptContent = document.getElementById('script').value;\r\n\r\n                    // Call updateScript function after artifact addition\r\n                    updateScript(data.artifact_id, formData.get('artifact-name'), scriptContent);\r\n\r\n                    // Get the media input element directly\r\n                    const mediaInput = document.getElementById('media-select');\r\n\r\n                    // Check if there is a media file to upload\r\n                    if (mediaInput.files.length > 0) {\r\n                        uploadArtifactMedia(data.artifact_id, formData);\r\n                    } else {\r\n                        document.getElementById('overlay').style.display = 'block'; // Show overlay if no media\r\n                    }\r\n\r\n                    // Reset the form after successful submission\r\n                    this.reset();\r\n\r\n                } else {\r\n                    document.getElementById('overlay').style.display = 'block'; // Show overlay on failure\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Error parsing JSON:\", e, data);\r\n                document.getElementById('overlay').style.display = 'block'; // Show overlay on parsing error\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n            document.getElementById('overlay').style.display = 'block'; // Show overlay on request error\r\n        });\r\n});\r\n\r\n\r\nfunction uploadArtifactMedia(artifactId, formData) {\r\n    // Create a FormData object to send the media file along with other parameters\r\n    const mediaData = new FormData();\r\n    mediaData.append('media-select', formData.get('media-select')); // Append the media file\r\n    mediaData.append('newArtifactId', artifactId); // Use the new artifact ID\r\n    mediaData.append('sectionId', formData.get('section')); // Append the section ID\r\n    mediaData.append('catalogId', formData.get('catalog') || 0); // Append catalog ID\r\n    mediaData.append('subCatalogId', formData.get('sub-catalog') || 0); // Append sub-catalog ID\r\n    mediaData.append('artifactName', formData.get('artifact-name')); // Append artifact name\r\n\r\n    // Create XMLHttpRequest for Uploading Media\r\n    const xhrMedia = new XMLHttpRequest();\r\n    xhrMedia.open('POST', '../include/addArtifactMedia.php', true);\r\n\r\n    xhrMedia.onload = function () {\r\n        if (xhrMedia.status === 200) {\r\n            try {\r\n                const responseMedia = JSON.parse(xhrMedia.responseText);\r\n                if (responseMedia.success) {\r\n                    console.log(\"Media uploaded successfully:\", responseMedia.message);\r\n                    document.getElementById('overlay-message').innerText = responseMedia.message;\r\n                } else {\r\n                    console.error(\"Error uploading media:\", responseMedia.message);\r\n                    document.getElementById('overlay-message').innerText = responseMedia.message;\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Error parsing media response:\", e);\r\n            }\r\n        } else {\r\n            console.error('Media Upload Request Failed. Status Code:', xhrMedia.status);\r\n        }\r\n\r\n        // Show overlay regardless of upload success or failure\r\n        document.getElementById('overlay').style.display = 'block';\r\n    };\r\n\r\n    xhrMedia.onerror = function () {\r\n        console.error('An error occurred while uploading the media.');\r\n        document.getElementById('overlay').style.display = 'block'; // Show overlay on error\r\n    };\r\n\r\n    // Send Media Data\r\n    xhrMedia.send(mediaData);\r\n}\r\n\r\n\r\n// -----------------------\r\n// QR Code Generate\r\n// -----------------------\r\n\r\nfunction generateQRCode(artifactId, artifactName) {\r\n    var qrCodeContainer = document.getElementById(\"qrcode\");\r\n    qrCodeContainer.innerHTML = \"\";\r\n\r\n    $(\"#qrcode\").qrcode({\r\n        text: String(artifactId),\r\n        width: 200,\r\n        height: 200,\r\n    });\r\n\r\n    setTimeout(() => {\r\n        var qrCodeCanvas = document.querySelector(\"#qrcode canvas\");\r\n        if (qrCodeCanvas) {\r\n            var dataURL = qrCodeCanvas.toDataURL(\"image/png\");\r\n\r\n            fetch('../include/saveQRCode.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    artifactId: artifactId,\r\n                    artifactName: artifactName,\r\n                    imageData: dataURL\r\n                })\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        console.log(\"QR code saved successfully:\", data.message);\r\n                    } else {\r\n                        console.error(\"Error saving QR code:\", data.message);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n    }, 1000);\r\n}\r\ndocument.getElementById('close-overlay').addEventListener('click', function() {\r\n    document.getElementById('overlay').style.display = 'none';\r\n});\r\n// -----------------------\r\n// Searching Artifact Tab\r\n// -----------------------\r\n\r\nlet selectedArtifact = null;\r\nlet highlightedItem = null;\r\n\r\nfunction searchArtifact() {\r\n    const query = document.querySelector('.search-input').value;\r\n\r\n    if (query === '') {\r\n        document.getElementById('search-results').innerHTML = '';\r\n        return;\r\n    }\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', `../include/searchArtifact.php?query=${encodeURIComponent(query)}`, true);\r\n    xhr.onload = function () {\r\n        if (this.status === 200) {\r\n            const results = JSON.parse(this.responseText);\r\n            displayResults(results);\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n\r\nlet isMultiSelectEnabled = false;\r\n\r\n// Function to display search results\r\nfunction displayResults(data) {\r\n    const resultsContainer = document.getElementById('search-results');\r\n    resultsContainer.innerHTML = '';\r\n\r\n    if (data.length === 0) {\r\n        resultsContainer.style.display = 'none'; // Hide the container if no results\r\n        resultsContainer.innerHTML = '<p>No results found</p>';\r\n        return;\r\n    }\r\n    resultsContainer.style.display = 'block'; // Show the container if there are results\r\n    const list = document.createElement('ul');\r\n    data.forEach(item => {\r\n        const listItem = document.createElement('li');\r\n\r\n        listItem.innerHTML = `\r\n            <input type=\"checkbox\" class=\"artifact-checkbox\" data-id=\"${item['ID']}\" style=\"display: ${isMultiSelectEnabled ? 'inline' : 'none'};\">\r\n            ${item['Name']}<br>\r\n        `;\r\n\r\n        listItem.onclick = (event) => {\r\n            // Prevent triggering when clicking the checkbox\r\n            if (event.target.tagName.toLowerCase() === 'input') return;\r\n            toggleEditButton(item, listItem);\r\n        };\r\n        list.appendChild(listItem);\r\n    });\r\n\r\n    resultsContainer.appendChild(list);\r\n}\r\n\r\n// Function to toggle Multi-Select mode\r\nfunction toggleMultiSelect() {\r\n    isMultiSelectEnabled = !isMultiSelectEnabled;\r\n    const checkboxes = document.querySelectorAll('.artifact-checkbox');\r\n    const deleteButton = document.getElementById('delete-selected-button');\r\n    const editButton = document.getElementById('edit-button');\r\n    const delButton = document.getElementById('delete-button');\r\n\r\n    checkboxes.forEach(checkbox => {\r\n        checkbox.style.display = isMultiSelectEnabled ? 'inline' : 'none';\r\n    });\r\n\r\n    // Show or hide the delete button\r\n    deleteButton.style.display = isMultiSelectEnabled ? 'inline' : 'none';\r\n\r\n    // Hide or disable the edit button when multi-select is enabled\r\n    if (isMultiSelectEnabled) {\r\n        if (editButton) editButton.style.display = 'none'; // Hide the edit button\r\n        if (delButton) delButton.style.display = 'none';\r\n    } else {\r\n        if (editButton) editButton.style.display = 'inline'; // Show the edit button if multi-select is disabled\r\n        if (delButton) delButton.style.display = 'inline';\r\n    }\r\n\r\n    const buttonText = isMultiSelectEnabled ? 'Disable Multi-Select' : 'Enable Multi-Select';\r\n    document.getElementById('toggle-multi-select').textContent = buttonText;\r\n}\r\n\r\n// Function to handle artifact selection and editing\r\nfunction toggleEditButton(item, listItem) {\r\n    if (isMultiSelectEnabled) {\r\n        return; // Don't allow editing in multi-select mode\r\n    }\r\n    const editButton = document.getElementById('edit-button');\r\n\r\n    if (selectedArtifact && selectedArtifact['ID'] === item['ID']) {\r\n        selectedArtifact = null;\r\n        if (editButton) editButton.remove();\r\n        if (highlightedItem) highlightedItem.classList.remove('highlight');\r\n        highlightedItem = null;\r\n        return;\r\n    }\r\n\r\n    selectedArtifact = item;\r\n\r\n    if (highlightedItem) {\r\n        highlightedItem.classList.remove('highlight');\r\n    }\r\n    highlightedItem = listItem;\r\n    highlightedItem.classList.add('highlight');\r\n\r\n    if (editButton) {\r\n        editButton.remove();\r\n    }\r\n\r\n    // Create a new edit button with an icon\r\n    const newEditButton = document.createElement('button');\r\n    newEditButton.id = 'edit-button';\r\n    newEditButton.classList.add('edit-button'); // Add class for styling\r\n    newEditButton.innerHTML = '<i class=\"fas fa-edit\" style=\"color: #f6c500; font-size: 20px;\"></i>'; // Font Awesome icon\r\n    newEditButton.style.background = 'none'; // Remove default button styles\r\n    newEditButton.style.border = 'none'; // Remove border\r\n    newEditButton.style.cursor = 'pointer'; // Change cursor to pointer\r\n    newEditButton.onclick = () => openModal(item);\r\n\r\n    // Append the edit button to the list item\r\n    listItem.appendChild(newEditButton);\r\n}\r\n// Function to fetch and populate artifact options (Sections, Catalogs, Subcatalogs)\r\nfunction fetchArtifactOptions() {\r\n    fetch('/include/get.php')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const sectionSelect = document.getElementById('section');\r\n            sectionSelect.innerHTML = '<option value=\"\">Select Section</option>';\r\n            data.sections.forEach(section => {\r\n                const option = document.createElement('option');\r\n                option.value = section.section_id;\r\n                option.textContent = section.section_name;\r\n                sectionSelect.appendChild(option);\r\n            });\r\n\r\n            // Event listener for Section change to update Catalog options\r\n            sectionSelect.addEventListener('change', (e) => {\r\n                const sectionId = e.target.value;\r\n                updateCatalogOptions(sectionId);\r\n            });\r\n\r\n            const catalogSelect = document.getElementById('catalog');\r\n            const subCatalogSelect = document.getElementById('sub-catalog');\r\n            catalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Catalog</option>';\r\n            catalogSelect.disabled = true;\r\n            subCatalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Sub Catalog</option>';\r\n            subCatalogSelect.disabled = true;\r\n        })\r\n        .catch(error => console.error('Error fetching options:', error));\r\n}\r\n\r\n// Function to update Catalog options based on selected Section\r\nfunction updateCatalogOptions(sectionId) {\r\n    const catalogSelect = document.getElementById('catalog');\r\n    const subCatalogSelect = document.getElementById('sub-catalog');\r\n\r\n    if (sectionId) {\r\n        fetch('/include/get.php?section_id=' + sectionId)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                catalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Catalog</option>';\r\n                if (data.catalogues.length > 0) {\r\n                    data.catalogues.forEach(catalogue => {\r\n                        const option = document.createElement('option');\r\n                        option.value = catalogue.catalogue_id;\r\n                        option.textContent = catalogue.catalogue_name;\r\n                        catalogSelect.appendChild(option);\r\n                    });\r\n                    catalogSelect.disabled = false;\r\n                } else {\r\n                    catalogSelect.disabled = true;\r\n                }\r\n                subCatalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Sub Catalog</option>';\r\n                subCatalogSelect.disabled = true;\r\n            })\r\n            .catch(error => console.error('Error fetching catalog options:', error));\r\n    } else {\r\n        catalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Catalog</option>';\r\n        catalogSelect.disabled = true;\r\n        subCatalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Sub Catalog</option>';\r\n        subCatalogSelect.disabled = true;\r\n    }\r\n}\r\n\r\n// Event listener for Catalog change to update Subcatalog options\r\ndocument.getElementById('catalog').addEventListener('change', (e) => {\r\n    const catalogId = e.target.value;\r\n    updateSubCatalogOptions(catalogId);\r\n});\r\n\r\n// Function to update Subcatalog options based on selected Catalog\r\nfunction updateSubCatalogOptions(catalogId) {\r\n    const subCatalogSelect = document.getElementById('sub-catalog');\r\n\r\n    if (catalogId) {\r\n        fetch('/include/get.php?catalog_id=' + catalogId)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                subCatalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Sub Catalog</option>';\r\n                if (data.subcatalogues.length > 0) {\r\n                    data.subcatalogues.forEach(subcatalogue => {\r\n                        const option = document.createElement('option');\r\n                        option.value = subcatalogue.subcat_id;\r\n                        option.textContent = subcatalogue.subcat_name;\r\n                        subCatalogSelect.appendChild(option);\r\n                    });\r\n                    subCatalogSelect.disabled = false;\r\n                } else {\r\n                    subCatalogSelect.disabled = true;\r\n                }\r\n            })\r\n            .catch(error => console.error('Error fetching sub-catalog options:', error));\r\n    } else {\r\n        subCatalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Sub Catalog</option>';\r\n        subCatalogSelect.disabled = true;\r\n    }\r\n}\r\n\r\n// Fetch artifact options on initial load\r\ndocument.addEventListener(\"DOMContentLoaded\", fetchArtifactOptions);\r\n\r\n\r\n// Function to delete selected artifacts (multi-select)\r\nfunction deleteSelectedArtifacts() {\r\n    const selectedCheckboxes = document.querySelectorAll('.artifact-checkbox:checked');\r\n    if (selectedCheckboxes.length === 0) {\r\n        alert('No artifacts selected.');\r\n        return;\r\n    }\r\n\r\n    const selectedIds = Array.from(selectedCheckboxes).map(checkbox => checkbox.getAttribute('data-id'));\r\n\r\n    if (confirm(`Are you sure you want to delete ${selectedIds.length} artifact(s)?`)) {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', '../include/deleteMultipleArtifacts.php', true);\r\n        xhr.setRequestHeader('Content-Type', 'application/json');\r\n        xhr.onload = function () {\r\n            const response = JSON.parse(this.responseText);\r\n            if (response.success) {\r\n                alert(response.message);\r\n                searchArtifact();\r\n            } else {\r\n                alert(response.message);\r\n            }\r\n        };\r\n        xhr.onerror = function () {\r\n            alert('An error occurred while deleting artifacts.');\r\n        };\r\n        xhr.send(JSON.stringify({ ids: selectedIds }));\r\n    }\r\n}\r\n\r\n// -----------------------\r\n// Single Selected Artifact Functionalities\r\n// -----------------------\r\n\r\n// Function to open the edit modal with artifact details\r\nfunction openModal(item) {\r\n    // Populate modal fields\r\n    document.getElementById('artifact-id').value = item['ID'];\r\n    document.getElementById('editName').value = item['Name'];\r\n    document.getElementById('editDescription').value = item['Description'];\r\n    document.getElementById('editScript').value = item['Script'] || ''; // Populate script textarea\r\n\r\n    // Fetch sections, catalogs, and subcatalogs and set them in the dropdowns\r\n    fetchSections(item['Section Name'], () => {\r\n        fetchCatalogs(item['Section Name'], item['Catalogue Name'], () => {\r\n            fetchSubcatalogs(item['Catalogue Name'], item['Subcatalogue Name']);\r\n        });\r\n    });\r\n\r\n    // Display the modal\r\n    document.getElementById('edit-modal').style.display = 'block';\r\n}\r\n\r\n\r\n// Function to delete a single artifact\r\nfunction deleteArtifact(id) {\r\n    // Confirm deletion with the user\r\n    confirmDelete = confirm(\"Are you sure you want to delete this artifact?\");\r\n    if (!confirmDelete) return; // Exit if the user cancels\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('DELETE', '../include/deleteArtifact.php', true); // Ensure this is the correct endpoint\r\n    xhr.setRequestHeader('Content-Type', 'application/json');\r\n    xhr.onload = function () {\r\n        const response = JSON.parse(this.responseText);\r\n        if (response.success) {\r\n            alert(response.message); // Show success message\r\n            closeModal(); // Close the modal\r\n            searchArtifact(); // Refresh the search results\r\n        } else {\r\n            alert(response.message); // Show error message\r\n        }\r\n    };\r\n    xhr.onerror = function () {\r\n        alert('An error occurred while deleting the artifact.');\r\n    };\r\n\r\n    // Send the ID of the artifact to delete\r\n    const data = { id: id };\r\n    xhr.send(JSON.stringify(data));\r\n}\r\n\r\n// Function to confirm deletion (optional, currently integrated within deleteArtifact)\r\nfunction confirmDelete(id) {\r\n    if (confirm(\"Are you sure you want to delete this artifact?\")) {\r\n        deleteArtifact(id);\r\n    }\r\n}\r\n\r\n// Function to fetch Sections for the edit modal\r\nfunction fetchSections(selectedSectionName, callback) {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', '../include/get.php', true);\r\n    xhr.onload = function () {\r\n        if (this.status === 200) {\r\n            const data = JSON.parse(this.responseText);\r\n            const sectionSelect = document.getElementById('editSection');\r\n            sectionSelect.innerHTML = '<option value=\"\">Select Section</option>'; // Reset options\r\n\r\n\r\n            data.sections.forEach(section => {\r\n                const option = document.createElement('option');\r\n                option.value = section.section_id;\r\n                option.textContent = section.section_name;\r\n\r\n                if (section.section_name === selectedSectionName) {\r\n                    option.selected = true;\r\n                }\r\n\r\n                sectionSelect.appendChild(option);\r\n            });\r\n\r\n            // Event listener for Section change to update Catalog options\r\n            sectionSelect.removeEventListener('change', handleEditSectionChange);\r\n            sectionSelect.addEventListener('change', handleEditSectionChange);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        }\r\n    };\r\n    xhr.onerror = function () {\r\n        alert('An error occurred while fetching sections.');\r\n    };\r\n    xhr.send();\r\n}\r\n\r\n\r\n// Handler for Section change in edit modal\r\nfunction handleEditSectionChange(e) {\r\n    const sectionId = e.target.value;\r\n    const catalogSelect = document.getElementById('editCatalog');\r\n    const subcatalogSelect = document.getElementById('editSubcatalog');\r\n\r\n    if (sectionId) {\r\n        fetch('/include/get.php?section_id=' + sectionId)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                catalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Catalog</option>';\r\n                if (data.catalogues.length > 0) {\r\n                    data.catalogues.forEach(catalog => {\r\n                        const option = document.createElement('option');\r\n                        option.value = catalog.catalogue_id;\r\n                        option.textContent = catalog.catalogue_name;\r\n                        catalogSelect.appendChild(option);\r\n                    });\r\n                    catalogSelect.disabled = false;\r\n                } else {\r\n                    catalogSelect.disabled = true;\r\n                }\r\n                subcatalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Sub Catalog</option>';\r\n                subcatalogSelect.disabled = true;\r\n            })\r\n            .catch(error => console.error('Error fetching catalog options:', error));\r\n    } else {\r\n        catalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Catalog</option>';\r\n        catalogSelect.disabled = true;\r\n        subcatalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Sub Catalog</option>';\r\n        subcatalogSelect.disabled = true;\r\n    }\r\n}\r\n\r\n// Function to fetch Catalogs for the edit modal\r\n// Function to fetch Catalogs based on Section Name\r\n// Function to fetch Catalogs based on Section Name\r\nfunction fetchCatalogs(selectedSectionName, selectedCatalogName, callback) {\r\n    if (!selectedSectionName) {\r\n        return; // Skip if the selected section name is empty\r\n    }\r\n\r\n    const data = {\r\n        sectionName: selectedSectionName,\r\n        catalogName: selectedCatalogName && selectedCatalogName !== 'N/A' ? selectedCatalogName : null\r\n    };\r\n\r\n    fetch('/include/getids.php', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => response.ok ? response.json() : Promise.resolve(null))\r\n        .then(data => {\r\n            const sectionId = data?.sectionId || null;\r\n            const catalogId = data?.catalogId || null;\r\n\r\n            if (!sectionId) {\r\n                return; // Exit if no section ID is found\r\n            }\r\n\r\n            // Fetch catalogs if catalogId exists, otherwise resolve without fetching\r\n            return catalogId ? fetch(`/include/get.php?section_id=${sectionId}`) : Promise.resolve(null);\r\n        })\r\n        .then(response => response?.ok ? response.json() : Promise.resolve(null))\r\n        .then(data => {\r\n            const catalogSelect = document.getElementById('editCatalog');\r\n            catalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Catalog</option>';\r\n\r\n            if (data?.catalogues?.length > 0) {\r\n                data.catalogues.forEach(catalog => {\r\n                    const option = document.createElement('option');\r\n                    option.value = catalog.catalogue_id || '';\r\n                    option.textContent = catalog.catalogue_name || 'Unnamed';\r\n                    catalogSelect.appendChild(option);\r\n                });\r\n                catalogSelect.disabled = false;\r\n\r\n                catalogSelect.removeEventListener('change', handleEditCatalogChange);\r\n                catalogSelect.addEventListener('change', handleEditCatalogChange);\r\n            } else {\r\n                catalogSelect.disabled = true;\r\n            }\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(error => console.error('Error fetching catalogs:', error));\r\n}\r\n\r\n// Handler for Catalog change in edit modal\r\nfunction handleEditCatalogChange(e) {\r\n    const catalogName = e.target.value;\r\n    fetchSubcatalogs(catalogName, null);\r\n}\r\n\r\n// Function to fetch Subcatalogs\r\nfunction fetchSubcatalogs(selectedCatalogName, selectedSubcatalogName) {\r\n    if (!selectedCatalogName) {\r\n        return; // Skip if no catalog name is provided\r\n    }\r\n\r\n    const data = {\r\n        catalogName: selectedCatalogName,\r\n        subcatalogName: selectedSubcatalogName\r\n    };\r\n\r\n    fetch('/include/getids.php', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => response.ok ? response.json() : Promise.resolve(null))\r\n        .then(ids => {\r\n            const subcatalogSelect = document.getElementById('editSubcatalog');\r\n            subcatalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Sub Catalog</option>';\r\n\r\n            const catalogId = ids?.catalogId || null;\r\n            if (!catalogId) {\r\n                subcatalogSelect.disabled = true; // No catalog ID, disable subcatalog\r\n                return;\r\n            }\r\n\r\n            return fetch(`/include/get.php?catalog_id=${catalogId}`);\r\n        })\r\n        .then(response => response?.ok ? response.json() : Promise.resolve(null))\r\n        .then(data => {\r\n            const subcatalogSelect = document.getElementById('editSubcatalog');\r\n            subcatalogSelect.innerHTML = '<option value=\"\" selected disabled>Select Sub Catalog</option>';\r\n\r\n            if (data?.subcatalogues?.length > 0) {\r\n                data.subcatalogues.forEach(subcatalog => {\r\n                    const option = document.createElement('option');\r\n                    option.value = subcatalog.subcat_id || '';\r\n                    option.textContent = subcatalog.subcat_name || 'Unnamed';\r\n                    subcatalogSelect.appendChild(option);\r\n                });\r\n                subcatalogSelect.disabled = false;\r\n            } else {\r\n                subcatalogSelect.disabled = true;\r\n            }\r\n        })\r\n        .catch(error => console.error('Error fetching subcatalogs:', error));\r\n}\r\n\r\n\r\n\r\n// -----------------------\r\n// Save Changes Functionality (Including Script Update)\r\n// -----------------------\r\n\r\n// Function to save changes to an artifact and update the script.json\r\nfunction saveChanges() {\r\n    // Collect Artifact Data\r\n    const id = document.getElementById('artifact-id').value;\r\n    const name = document.getElementById('editName').value;\r\n    const sectionId = document.getElementById('editSection').value;\r\n    const catalogId = document.getElementById('editCatalog').value || null;\r\n    const subcatalogId = document.getElementById('editSubcatalog').value || null;\r\n    const description = document.getElementById('editDescription').value;\r\n\r\n    // Collect Script Data\r\n    const scriptContent = document.getElementById('editScript').value;\r\n\r\n    // Prepare Artifact Data Payload\r\n    const artifactData = {\r\n        id: id,\r\n        name: name,\r\n        section_id: sectionId,\r\n        catalog_id: catalogId,\r\n        subcatalog_id: subcatalogId,\r\n        description: description,\r\n    };\r\n\r\n    // Create XMLHttpRequest for Updating Artifact\r\n    const xhrArtifact = new XMLHttpRequest();\r\n    xhrArtifact.open('POST', '../include/editArtifact.php', true);\r\n    xhrArtifact.setRequestHeader('Content-Type', 'application/json');\r\n\r\n    xhrArtifact.onload = function () {\r\n        if (xhrArtifact.status === 200) {\r\n            try {\r\n                const responseArtifact = JSON.parse(xhrArtifact.responseText);\r\n                if (responseArtifact.success) {\r\n                    // Artifact updated successfully, proceed to update the script\r\n                    if (scriptContent && scriptContent.trim() !== \"\") {\r\n                        updateScript(id, name, scriptContent);\r\n                    }\r\n                    updateArtifactMedia(id, sectionId, catalogId, subcatalogId, name);\r\n                    updateQRCode(id, name);\r\n                } else {\r\n                    // Handle Artifact Update Failure\r\n                    console.log(`Artifact Update Failed: ID=${id}, Response Message=${responseArtifact.message}, Invalid Fields=${JSON.stringify(responseArtifact.invalidFields)}`);\r\n                }\r\n            } catch (e) {\r\n                console.log('Error parsing response: ' + e.message); // Handle JSON parsing error\r\n            }\r\n        } else {\r\n            // Handle HTTP Errors for Artifact Update\r\n            alert('Artifact Update Request Failed. Status Code: ' + xhrArtifact.status);\r\n        }\r\n    };\r\n\r\n    xhrArtifact.onerror = function () {\r\n        // Handle Network Errors for Artifact Update\r\n        alert('An error occurred while updating the artifact.');\r\n    };\r\n\r\n    // Send Artifact Data\r\n    xhrArtifact.send(JSON.stringify(artifactData));\r\n}\r\nfunction updateArtifactMedia(artifactId, sectionId, catalogId, subcatalogId, artifactName) {\r\n    // Construct the filename based on the IDs\r\n    let fileName;\r\n    if (catalogId === null && subcatalogId === null) {\r\n        fileName = artifactId + \".\" + sectionId;\r\n    } else if (subcatalogId === null) {\r\n        fileName = artifactId + \".\" + sectionId + \".\" + catalogId;\r\n    } else {\r\n        fileName = artifactId + \".\" + sectionId + \".\" + catalogId + \".\" + subcatalogId;\r\n    }\r\n\r\n    const newFileName = fileName + \"-\" + artifactName;\r\n\r\n    // Send the request to update the artifact media\r\n    fetch('../include/updateArtifactMedia.php', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            artifactId: artifactId,\r\n            newFileName: newFileName,\r\n            fileExt: 'mp4' // Example extension\r\n        })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                console.log(\"Artifact media updated successfully:\", data.message);\r\n            } else {\r\n                console.log(\"Searched Path: \", data.searchedPath);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n        });\r\n\r\n}\r\n\r\n\r\nfunction updateQRCode(artifactId, newArtifactName) {\r\n    // Send a request to rename the QR code file based on artifactId\r\n    fetch('../include/renameQRCode.php', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            artifactId: artifactId,       // The artifact ID remains the same\r\n            newArtifactName: newArtifactName  // The new artifact name\r\n        })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                console.log(\"QR code filename updated successfully:\", data.message);\r\n            } else if (data.message !== 'QR code file not found.') {\r\n                // Only log the error if it's not about the missing QR code\r\n                console.error(\"Error updating QR code filename:\", data.message);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n        });\r\n}\r\n\r\n\r\n\r\n\r\n// Function to update the script.json file via updateScript.php\r\nfunction updateScript(artifactId, artifactName, scriptContent) {\r\n    // Prepare Script Data Payload\r\n    const scriptData = `artifact_id=${encodeURIComponent(artifactId)}&artifact_name=${encodeURIComponent(artifactName)}&script=${encodeURIComponent(scriptContent)}`;\r\n\r\n    // Create XMLHttpRequest for Updating Script\r\n    const xhrScript = new XMLHttpRequest();\r\n    xhrScript.open('POST', '../include/updateScript.php', true);\r\n    xhrScript.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n    xhrScript.onload = function () {\r\n        if (xhrScript.status === 200) {\r\n            try {\r\n                const responseScript = JSON.parse(xhrScript.responseText);\r\n                if (responseScript.success) {\r\n                    // Both Artifact and Script Updated Successfully\r\n                    closeModal();\r\n                    searchArtifact();\r\n                    alert('Artifact and script updated successfully.');\r\n                } else {\r\n                    // Handle Script Update Failure\r\n                    alert('Artifact updated, but failed to update script: ' + responseScript.error);\r\n                }\r\n            } catch (e) {\r\n                alert('Error parsing script response: ' + e.message); // Handle JSON parsing error\r\n            }\r\n        } else {\r\n            // Handle HTTP Errors for Script Update\r\n            alert('Script Update Request Failed. Status Code: ' + xhrScript.status);\r\n        }\r\n    };\r\n\r\n    xhrScript.onerror = function () {\r\n        // Handle Network Errors for Script Update\r\n        alert('An error occurred while updating the script.');\r\n    };\r\n\r\n    // Send Script Data\r\n    xhrScript.send(scriptData);\r\n}\r\n\r\n\r\n// -----------------------\r\n// Modal Management\r\n// -----------------------\r\n\r\n// Function to close the edit modal\r\nfunction closeModal() {\r\n    document.getElementById('edit-modal').style.display = 'none';\r\n}\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const sectionBtn = document.getElementById('section-btn');\r\n    const catalogBtn = document.getElementById('catalog-btn');\r\n    const subcatBtn = document.getElementById('subcat-btn');\r\n\r\n    const sectionPopup = document.querySelector('.popup-section');\r\n    const catalogPopup = document.querySelector('.popup-catalog');\r\n    const subcatPopup = document.querySelector('.popup-subcat');\r\n\r\n    const popupOverlay = document.querySelector('.popup');\r\n    const closeIcons = document.querySelectorAll('.close');\r\n\r\n    function showPopup(popup) {\r\n        popupOverlay.style.display = 'flex';\r\n        popup.style.display = 'block';\r\n    }\r\n\r\n    function hidePopup() {\r\n        popupOverlay.style.display = 'none';\r\n        sectionPopup.style.display = 'none';\r\n        catalogPopup.style.display = 'none';\r\n        subcatPopup.style.display = 'none';\r\n    }\r\n\r\n    if (sectionBtn) {\r\n        sectionBtn.addEventListener('click', () => showPopup(sectionPopup));\r\n    }\r\n\r\n    if (catalogBtn) {\r\n        catalogBtn.addEventListener('click', () => showPopup(catalogPopup));\r\n    }\r\n\r\n    if (subcatBtn) {\r\n        subcatBtn.addEventListener('click', () => showPopup(subcatPopup));\r\n    }\r\n\r\n    closeIcons.forEach(icon => {\r\n        icon.addEventListener('click', hidePopup);\r\n    });\r\n});\r\n\r\n// -----------------------\r\n// Printing QR Code\r\n// -----------------------\r\n\r\nfunction printQRCode() {\r\n    var value = document.getElementById(\"artifact-id\").value;\r\n    var name = document.getElementById(\"editName\").value; // Get the artifact name\r\n\r\n    if (value) {\r\n        $(\"#qrcode\").empty();\r\n\r\n        // Generate the QR code\r\n        $(\"#qrcode\").qrcode({\r\n            text: value,\r\n            width: 400,\r\n            height: 400,\r\n        });\r\n\r\n        // Ensure the QR code is fully rendered before proceeding\r\n        setTimeout(() => {\r\n            var qrCodeCanvas = document.querySelector(\"#qrcode canvas\");\r\n            if (qrCodeCanvas) {\r\n                // Convert QR code canvas to data URL\r\n                var qrCodeImage = qrCodeCanvas.toDataURL('image/png');\r\n                \r\n                // Open print window\r\n                var printWindow = window.open(\"\", \"\", \"width=800,height=600\");\r\n                printWindow.document.write(`\r\n                  <html>\r\n                    <head>\r\n                      <title>${name} - QR Code</title> <!-- Use the name value in the title -->\r\n                      <style>\r\n                        body {\r\n                          display: flex;\r\n                          justify-content: center;\r\n                          align-items: center;\r\n                          height: 100vh;\r\n                          margin: 0;\r\n                        }\r\n                        img {\r\n                          max-width: 100%;\r\n                          height: auto;\r\n                        }\r\n                      </style>\r\n                    </head>\r\n                    <body>\r\n                      <img src=\"${qrCodeImage}\" alt=\"QR Code\"/> <!-- Use the rendered QR code image -->\r\n                    </body>\r\n                  </html>\r\n                `);\r\n                printWindow.document.close();\r\n                printWindow.focus();\r\n                printWindow.print();\r\n                printWindow.onafterprint = () => {\r\n                    printWindow.close(); // Close the window after printing\r\n                };\r\n            }\r\n        }, 1800); // Use a slightly longer delay to ensure the QR code has rendered\r\n    } else {\r\n        alert(\"Please enter a value.\");\r\n    }\r\n}\r\n\r\n// Edit Media\r\nlet selectedMediaId = null;\r\n\r\nfunction selectMedia(id) {\r\n    // Hide the popup\r\n    var popup = document.getElementById('edit-media-popup');\r\n    popup.style.display = 'none';\r\n\r\n    // Display currently selected media ID\r\n    selectedMediaId = id;\r\n    var mediaId = document.getElementById('selected-media-id');\r\n    mediaId.textContent = 'Media ID: ' + selectedMediaId;\r\n\r\n    // Display fields and button\r\n    var titleField = document.getElementById('new-title-field');\r\n    var descField = document.getElementById('new-desc-field');\r\n    var updateBtn = document.getElementById('update-media-btn');\r\n\r\n    titleField.style.display = 'block';\r\n    descField.style.display = 'block'; \r\n    updateBtn.style.display = 'block'; \r\n\r\n    // Get the div containing the details by its ID\r\n    var div = document.getElementById(id);\r\n    \r\n    // Get the content inside it\r\n    var titleContent = div.querySelector('#media-title').textContent.replace(\"Title:\", \"\").trim();\r\n    var descriptionContent = div.querySelector('#media-description').textContent.replace(\"Description:\", \"\").trim();\r\n\r\n    var newTitleField = document.getElementById('new-media-title');\r\n    var newDescField = document.getElementById('new-media-description');\r\n\r\n    newTitleField.value = titleContent;\r\n    newDescField.value = descriptionContent;\r\n}\r\n\r\nfunction updateMedia() {\r\n    // Prevent the form from submitting normally\r\n    document.getElementById('media-form').addEventListener('submit', function(event) {\r\n        event.preventDefault();\r\n\r\n        // Collect values from the input fields\r\n        const mediaId = selectedMediaId;  // Ensure selectedMediaId is defined\r\n        const newTitle = document.getElementById('new-media-title').value; // Get the title value\r\n        const newDescription = document.getElementById('new-media-description').value; // Get the description value\r\n\r\n        // Create a FormData object to send the data\r\n        const formData = new FormData();\r\n        formData.append('media_id', mediaId);\r\n        formData.append('new-media-title', newTitle);\r\n        formData.append('new-media-description', newDescription);\r\n\r\n        // Send the data to the server using fetch\r\n        fetch('../include/editMedia.php', {\r\n            method: 'POST',\r\n            body: formData,  // Send the FormData object\r\n        })\r\n        .then(response => response.json())  // Expecting a JSON response from PHP\r\n        .then(data => {\r\n            console.log('Response from server:', data);\r\n            if (data.success) {\r\n                alert(\"Update successful: \" + data.message);\r\n            } else {\r\n                alert(\"Update failed: \" + data.message);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n        });\r\n    });\r\n}\r\n\r\nfunction deleteMedia(id) {\r\n    // Send the data to the server using fetch\r\n    fetch('../include/deleteMedia.php', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded', \r\n        },\r\n        body: new URLSearchParams({ 'id': id }) \r\n    })\r\n    .then(response => response.json()) \r\n    .then(data => {\r\n        if (data.success) {\r\n            // Alert for successful deletion\r\n            alert(\"Delete successful, ID: \" + id);\r\n        } else {\r\n            // Alert for failed deletion\r\n            alert(\"Delete failed. ID: \" + id + \". Error: \" + data.message);\r\n        }\r\n        location.reload();\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n\r\n    // Hide the popup\r\n    var popup = document.getElementById('edit-media-popup');\r\n    popup.style.display = 'none';\r\n}\r\n\r\n// -----------------------\r\n// Additional Event Listeners or Functions\r\n// -----------------------\r\n\r\n// You can add more functions here as needed for other tabs or functionalities\r\n\r\n// -----------------------\r\n// End of admin.js\r\n// -----------------------\r\n\r\n\r\n// Function to fetch artifact options\r\n// function fetchArtifactOptions() {\r\n//     fetch('include/get.php')\r\n//         .then(response => response.json())\r\n//         .then(data => {\r\n//             // Populate the section select\r\n//             let sectionSelect = document.getElementById('section');\r\n//             sectionSelect.innerHTML = '<option value=\"create_section\">Create Section</option>';\r\n//             data.sections.forEach(section => {\r\n//                 let option = document.createElement('option');\r\n//                 option.value = section.section_id;\r\n//                 option.textContent = section.section_name;\r\n//                 sectionSelect.appendChild(option);\r\n//             });\r\n//\r\n//             // Populate the catalogue select\r\n//             let catalogueSelect = document.getElementById('catalog');\r\n//             catalogueSelect.innerHTML = '<option value=\"create_catalog\">Create Catalog</option>';\r\n//             data.catalogues.forEach(catalogue => {\r\n//                 let option = document.createElement('option');\r\n//                 option.value = catalogue.catalogue_id;\r\n//                 option.textContent = catalogue.catalogue_name;\r\n//                 catalogueSelect.appendChild(option);\r\n//             });\r\n//\r\n//             // Populate the subcatalogue select\r\n//             let subcatalogueSelect = document.getElementById('sub-catalog');\r\n//             subcatalogueSelect.innerHTML = '<option value=\"create_subcatalog\">Create Sub Catalog</option>';\r\n//             data.subcatalogues.forEach(subcatalogue => {\r\n//                 let option = document.createElement('option');\r\n//                 option.value = subcatalogue.subcat_id;\r\n//                 option.textContent = subcatalogue.subcat_name;\r\n//                 subcatalogueSelect.appendChild(option);\r\n//             });\r\n//         })\r\n//         .catch(error => console.error('Error fetching options:', error));\r\n// }\r\n// document.addEventListener(\"DOMContentLoaded\", fetchArtifactOptions);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/res/js/admin/admin.js b/res/js/admin/admin.js
--- a/res/js/admin/admin.js	(revision 2120b421d4b232e8ddae7d2a75214987464883cf)
+++ b/res/js/admin/admin.js	(date 1729442850520)
@@ -537,8 +537,6 @@
 }
 
 // Function to fetch Catalogs for the edit modal
-// Function to fetch Catalogs based on Section Name
-// Function to fetch Catalogs based on Section Name
 function fetchCatalogs(selectedSectionName, selectedCatalogName, callback) {
     if (!selectedSectionName) {
         return; // Skip if the selected section name is empty
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"13a85b59-d510-4419-a939-7002b443add3\" name=\"Changes\" comment=\"stuff\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/VAmodel/script.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/assets/VAmodel/script.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/include/updateArtifactMedia.php\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/include/updateArtifactMedia.php\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/res/js/admin/admin.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/res/js/admin/admin.js\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ComposerSettings\">\r\n    <execution />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"recover-branch\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"PhpWorkspaceProjectConfiguration\" interpreter_name=\"D:\\wamp64\\bin\\php\\php8.2.0\\php.exe\" />\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2n7FMzd8undOZHweCIXgBo46rmT\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"last_opened_file_path\": \"C:/Users/adlei/Desktop\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"13a85b59-d510-4419-a939-7002b443add3\" name=\"Changes\" comment=\"\" />\r\n      <created>1728316167419</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1728316167419</updated>\r\n      <workItem from=\"1728316201201\" duration=\"689000\" />\r\n      <workItem from=\"1728572640689\" duration=\"97000\" />\r\n      <workItem from=\"1728614199656\" duration=\"1121000\" />\r\n      <workItem from=\"1728658917314\" duration=\"1433000\" />\r\n      <workItem from=\"1728662046730\" duration=\"3605000\" />\r\n      <workItem from=\"1728901075199\" duration=\"5271000\" />\r\n      <workItem from=\"1728911458356\" duration=\"2180000\" />\r\n      <workItem from=\"1728999670045\" duration=\"7002000\" />\r\n      <workItem from=\"1729083976081\" duration=\"11064000\" />\r\n      <workItem from=\"1729169251250\" duration=\"1745000\" />\r\n      <workItem from=\"1729178582490\" duration=\"42000\" />\r\n      <workItem from=\"1729179359059\" duration=\"2081000\" />\r\n      <workItem from=\"1729253979232\" duration=\"4275000\" />\r\n      <workItem from=\"1729270361204\" duration=\"5934000\" />\r\n      <workItem from=\"1729300263592\" duration=\"3370000\" />\r\n      <workItem from=\"1729350653814\" duration=\"6939000\" />\r\n      <workItem from=\"1729404967713\" duration=\"7040000\" />\r\n      <workItem from=\"1729412109866\" duration=\"97000\" />\r\n      <workItem from=\"1729412224368\" duration=\"96000\" />\r\n      <workItem from=\"1729412335056\" duration=\"11409000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"minor fixes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1728572724752</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1728572724752</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"minor fixes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1728614565894</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1728614565894</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"minor fixes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1728665376474</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1728665376474</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"minor fixes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729011976268</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729011976268</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729095289135</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729095289135</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729179689316</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729179689316</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729254517056</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729254517056</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729258155346</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729258155346</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729259578183</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729259578183</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729260324301</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729260324301</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729270757434</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729270757434</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729270902970</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729270902970</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729303573473</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729303573473</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729411968286</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729411968286</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729412021689</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729412021689</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729412629594</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729412629594</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729413257909</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729413257909</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729413661352</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729413661352</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729414804973</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729414804973</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729416649680</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729416649680</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"stuff\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1729418275605</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729418275605</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"22\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"minor fixes\" />\r\n    <MESSAGE value=\"stuff\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"stuff\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2120b421d4b232e8ddae7d2a75214987464883cf)
+++ b/.idea/workspace.xml	(date 1729443022001)
@@ -6,8 +6,6 @@
   <component name="ChangeListManager">
     <list default="true" id="13a85b59-d510-4419-a939-7002b443add3" name="Changes" comment="stuff">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/VAmodel/script.json" beforeDir="false" afterPath="$PROJECT_DIR$/assets/VAmodel/script.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/include/updateArtifactMedia.php" beforeDir="false" afterPath="$PROJECT_DIR$/include/updateArtifactMedia.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/res/js/admin/admin.js" beforeDir="false" afterPath="$PROJECT_DIR$/res/js/admin/admin.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -46,23 +44,23 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "git-widget-placeholder": "main",
-    "last_opened_file_path": "C:/Users/adlei/Desktop",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "preferences.lookFeel",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/adlei/Desktop&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -90,7 +88,9 @@
       <workItem from="1729404967713" duration="7040000" />
       <workItem from="1729412109866" duration="97000" />
       <workItem from="1729412224368" duration="96000" />
-      <workItem from="1729412335056" duration="11409000" />
+      <workItem from="1729412335056" duration="11582000" />
+      <workItem from="1729430015510" duration="2137000" />
+      <workItem from="1729438660483" duration="2536000" />
     </task>
     <task id="LOCAL-00001" summary="minor fixes">
       <option name="closed" value="true" />
@@ -260,7 +260,15 @@
       <option name="project" value="LOCAL" />
       <updated>1729418275605</updated>
     </task>
-    <option name="localTasksCounter" value="22" />
+    <task id="LOCAL-00022" summary="stuff">
+      <option name="closed" value="true" />
+      <created>1729425917767</created>
+      <option name="number" value="00022" />
+      <option name="presentableId" value="LOCAL-00022" />
+      <option name="project" value="LOCAL" />
+      <updated>1729425917767</updated>
+    </task>
+    <option name="localTasksCounter" value="23" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
